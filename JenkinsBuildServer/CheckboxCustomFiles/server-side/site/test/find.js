module.exports = { findResult: "Cursor {pool: null,server: null, disconnectHandler: Store {   s: { storedOps: [], storeOptions: [Object], topology: [Server] }length: [Getter] },bson: BSON {},ns: 'site.studies', cmd: { find: 'site.studies',   limit: 0,   skip: 0,   query: { name: 'tutorials point' },   readPreference: ReadPreference { preference: 'primary', tags: undefined, options: [Object] },   slaveOk: true }, options: { readPreference: ReadPreference { preference: 'primary', tags: undefined, options: [Object] },   skip: 0,   limit: 0,   raw: undefined,   hint: null,   timeout: undefined,   slaveOk: true,   db:    Db {      domain: null,      _events: {},      _eventsCount: 0,      _maxListeners: undefined,      s: [Object],      serverConfig: [Getter],      bufferMaxEntries: [Getter],      databaseName: [Getter] },   promiseLibrary: [Function: Promise],   disconnectHandler: Store { s: [Object], length: [Getter] } },topology: Server {   domain: null,   _events:    { reconnect: [Function: reconnectHandler],      reconnectFailed: [Function: reconnectFailedHandler],      serverDescriptionChanged: [Function],      serverHeartbeatStarted: [Function],      serverHeartbeatSucceeded: [Function],      serverHeartbeatFailed: [Function],      serverOpening: [Function],      serverClosed: [Function],      topologyOpening: [Function],      topologyClosed: [Function],      topologyDescriptionChanged: [Function],      attemptReconnect: [Function],      monitoring: [Function],      timeout: [Function],      error: [Function],      close: [Function],      destroy: [Function: destroyHandler] },   _eventsCount: 17,   _maxListeners: undefined,   id: 1,   s:    { options: [Object],      logger: [Logger],      Cursor: [Function],      bson: BSON {},      pool: [Pool],      disconnectHandler: [Store],      monitoring: true,      inTopology: false,      monitoringInterval: 5000,      topologyId: -1,      serverDescription: [Object],      topologyDescription: [Object] },   ismaster:    { ismaster: true,      maxBsonObjectSize: 16777216,      maxMessageSizeBytes: 48000000,      maxWriteBatchSize: 100000,      localTime: 2018-03-19T20:18:47.471Z,      logicalSessionTimeoutMinutes: 30,      minWireVersion: 0,      maxWireVersion: 6,      readOnly: false,      ok: 1 },   lastIsMasterMS: 0,   monitoringProcessId:    Timeout {      _called: false,      _idleTimeout: 5000,      _idlePrev: [Timeout],      _idleNext: [Timeout],      _idleStart: 8075,      _onTimeout: [Function],      _timerArgs: undefined,      _repeat: null,      _destroyed: false,      [Symbol(asyncId)]: 287,      [Symbol(triggerAsyncId)]: 285 },   initalConnect: false,   wireProtocolHandler: WireProtocol { legacyWireProtocol: WireProtocol {} },   _type: 'server',   clientInfo:    { driver: [Object],      os: [Object],      platform: 'Node.js v9.5.0, LE, mongodb-core: 2.1.19' },   lastUpdateTime: 0,   lastWriteDate: 0,   staleness: 0 }, cursorState: { cursorId: null,   cmd:    { find: 'site.studies',      limit: 0,      skip: 0,      query: [Object],      readPreference: [ReadPreference],      slaveOk: true },   documents: [],   cursorIndex: 0,   dead: false,   killed: false,   init: false,   notified: false,   limit: 0,   skip: 0,   batchSize: 1000,   currentLimit: 0,   transforms: undefined }, logger: Logger { className: 'Cursor' }, _readableState: ReadableState {   objectMode: true,   highWaterMark: 16,   buffer: BufferList { head: null, tail: null, length: 0 },   length: 0,   pipes: null,   pipesCount: 0,   flowing: null,   ended: false,   endEmitted: false,   reading: false,   sync: true,   needReadable: false,   emittedReadable: false,   readableListening: false,   resumeScheduled: false,   destroyed: false,   defaultEncoding: 'utf8',   awaitDrain: 0,   readingMore: false,   decoder: null,   encoding: null },readable: true, domain: null, _events: {}, _eventsCount: 0, _maxListeners: undefined, s: { numberOfRetries: 5,   tailableRetryInterval: 500,   currentNumberOfRetries: 5,   state: 0,   streamOptions: {},   bson: BSON {},   ns: 'site.studies',   cmd:    { find: 'site.studies',      limit: 0,      skip: 0,      query: [Object],      readPreference: [ReadPreference],      slaveOk: true },   options:    { readPreference: [ReadPreference],      skip: 0,      limit: 0,      raw: undefined,      hint: null,      timeout: undefined,      slaveOk: true,      db: [Db],      promiseLibrary: [Function: Promise],      disconnectHandler: [Store] },   topology:    Server {      domain: null,      _events: [Object],      _eventsCount: 17,      _maxListeners: undefined,      id: 1,      s: [Object],      ismaster: [Object],      lastIsMasterMS: 0,      monitoringProcessId: [Timeout],      initalConnect: false,      wireProtocolHandler: [WireProtocol],      _type: 'server',      clientInfo: [Object],      lastUpdateTime: 0,      lastWriteDate: 0,      staleness: 0 },   topologyOptions:    { host: '127.0.0.1',      port: 27017,      disconnectHandler: [Store],      cursorFactory: [Function],      reconnect: true,      emitError: true,      size: 5,      socketOptions: {},      socketTimeout: 360000,      connectionTimeout: 30000,      clientInfo: [Object],      authSource: 'admin',      readPreference: [ReadPreference],      promiseLibrary: [Function: Promise],      bson: BSON {} },   promiseLibrary: [Function: Promise],   currentDoc: null }, sortValue: undefined }{ id: 1, token: 1, studyKind: 'survey' }"
 };
